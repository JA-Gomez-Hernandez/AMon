apply plugin: 'com.android.application'

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion = 28

    defaultConfig {
        applicationId = "es.ugr.mdsm.amon"
        versionName = "1.0"
        minSdkVersion 23
        targetSdkVersion 28
        versionCode = 1
        archivesBaseName = "AMon-v$versionName"

        externalNativeBuild {
            cmake {
                cppFlags ""
                arguments "-DANDROID_PLATFORM=android-22"
                // https://developer.android.com/ndk/guides/cmake.html
            }
        }

        ndk {
            // https://developer.android.com/ndk/guides/abis.html#sa
            abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
        }

    }
    signingConfigs {
        release {
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
        }
    }

    lintOptions {
        disable 'MissingTranslation'
        abortOnError false
    }

    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }

    buildTypes {
        release {
            minifyEnabled = true
            useProguard = true
            proguardFiles.add(file('proguard-rules.pro'))
            signingConfig signingConfigs.release
            buildConfigField "boolean", "PLAY_STORE_RELEASE", "false"
            // buildConfigField "String", "HOSTS_FILE_URI", "\"http://www.netguard.me/hosts\""
            // buildConfigField "String", "GITHUB_LATEST_API", "\"https://api.github.com/repos/M66B/NetGuard/releases/latest\""
        }
        play {
            minifyEnabled = true
            useProguard = true
            signingConfig signingConfigs.release
            proguardFiles.add(file('proguard-rules.pro'))
            buildConfigField "boolean", "PLAY_STORE_RELEASE", "true"
            // buildConfigField "String", "HOSTS_FILE_URI", "\"\""
            // buildConfigField "String", "GITHUB_LATEST_API", "\"\""
        }
        debug {
            minifyEnabled = true
            useProguard = true
            proguardFiles.add(file('proguard-rules.pro'))
            buildConfigField "boolean", "PLAY_STORE_RELEASE", "false"
            // buildConfigField "String", "HOSTS_FILE_URI", "\"http://www.netguard.me/hosts\""
            // buildConfigField "String", "GITHUB_LATEST_API", "\"https://api.github.com/repos/M66B/NetGuard/releases/latest\""
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    // https://developer.android.com/topic/libraries/support-library/androidx-rn
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    annotationProcessor 'androidx.annotation:annotation:1.0.2'
    // https://bumptech.github.io/glide/

    implementation 'com.squareup.retrofit2:retrofit:2.5.0'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'com.squareup.retrofit2:converter-gson:2.5.0'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.8'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.5.0'
    implementation 'com.scottyab:rootbeer-lib:0.0.7'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

}
